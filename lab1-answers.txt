1.At what point does the processor start executing 32-bit code? What exactly causes the switch from 16- to 32-bit mode? 

A:At the position of label:"protcseg:". 
The instruction:"ljmp    $PROT_MODE_CSEG, $protcseg" exactly causes the switch from 16-bit to 32-bit mode.

2.What is the last instruction of the boot loader executed, and what is the first instruction of the kernel it just loaded? 

A:The last instruction: "0x7d71:	call   *0x10018". 
The first instruction:"0x10000c:	movw   $0x1234,0x472"

3.How does the boot loader decide how many sectors it must read in order to fetch the entire kernel from disk? Where does it find this information?

A:This information is stored in ELF file header, i.e. the first sector read from disk.

4(exercise 5).Examine the 8 words of memory at 0x00100000 at the point the BIOS enters the boot loader, and then again at the point the boot loader enters the kernel. Why are they different?

A:Because the boot loader load the kernel at address: 0x100000.

5(exercise 7).What is the first instruction after the new mapping is established that would fail to work properly if the old mapping were still in place?

A:The first instruction to crash is "jmp	*%eax"
