1.What is the purpose of having an individual handler function for each exception/interrupt? (i.e., if all exceptions/interrupts were delivered to the same handler, what feature that exists in the current implementation could not be provided?)

A:1.We can't know which exception or interupt causes the trap unless H/W help push exception number. 2. We can't use error code feature because all exceptions use the same handler.If we want to solve this problem using unified namespace for error code, we may use out all space with the growth of user-define exceptions.

2.Did you have to do anything to make the user/softint program behave correctly? The grade script expects it to produce a general protection fault (trap 13), but softint's code says int $14. Why should this produce interrupt vector 13? What happens if the kernel actually allows softint's int $14 instruction to invoke the kernel's page fault handler (which is interrupt vector 14)?

A:1.Because we set the DPL of pagefault entry in IDT as RING 0, that's to say, we can't use soft interupt to trigger page fault in user mode. Once we've done it, it will produce a general protection fault.
2.If the kernel actually allows softint's int $14 instruction to invoke the kernel's page fault handler, that's to say that we allow user to trigger page fault arbitrarily, user may use this feature to inspect kernel state. That's a big safety issue.

3.The break point test case will either generate a break point exception or a general protection fault depending on how you initialized the break point entry in the IDT (i.e., your call to SETGATE from trap_init). Why? How do you need to set it up in order to get the breakpoint exception to work as specified above and what incorrect setup would cause it to trigger a general protection fault?

A:As the answer in question 2, we need to set the DPL of pagefault entry in IDT as RING 3, so that user may use "int 3" to set up a breakpoint. If we set the DPL of pagefault entry in IDT as RING 0, it will produce a general protection fault when we use "int 3".

4.What do you think is the point of these mechanisms, particularly in light of what the user/softint test program does?

A: I think the point of these mechanisms is priviledge level in exception triggerations, which is a issue about kernel safety.
